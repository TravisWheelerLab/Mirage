#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#ifndef _BasicBio_H_
#define _BasicBio_H_

static float MBB_INF  =  1.0/0.0;
static float MBB_NINF = -1.0/0.0;

static float MBB_BLOSUM62[441] = {
   4.0,  0.0, -2.0, -1.0, -2.0,  0.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0, -1.0, -2.0, -3.0, -2.0,  0.0,
   0.0,  9.0, -3.0, -4.0, -2.0, -3.0, -3.0, -1.0, -3.0, -1.0, -1.0, -3.0, -3.0, -3.0, -3.0, -1.0, -1.0, -1.0, -2.0, -2.0,  0.0,
  -2.0, -3.0,  6.0,  2.0, -3.0, -1.0, -1.0, -3.0, -1.0, -4.0, -3.0,  1.0, -1.0,  0.0, -2.0,  0.0,  1.0, -3.0, -4.0, -3.0,  0.0, 
  -1.0, -4.0,  2.0,  5.0, -3.0, -2.0,  0.0, -3.0,  1.0, -3.0, -2.0,  0.0, -1.0,  2.0,  0.0,  0.0,  0.0, -3.0, -3.0, -2.0,  0.0, 
  -2.0, -2.0, -3.0, -3.0,  6.0, -3.0, -1.0,  0.0, -3.0,  0.0,  0.0, -3.0, -4.0, -3.0, -3.0, -2.0, -2.0, -1.0,  1.0,  3.0,  0.0, 
   0.0, -3.0, -1.0, -2.0, -3.0,  6.0, -2.0, -4.0, -2.0, -4.0, -3.0, -2.0, -2.0, -2.0, -2.0,  0.0,  1.0,  0.0, -2.0, -3.0,  0.0, 
  -2.0, -3.0,  1.0,  0.0, -1.0, -2.0,  8.0, -3.0, -1.0, -3.0, -2.0,  1.0, -2.0,  0.0,  0.0, -1.0,  0.0, -2.0, -2.0,  2.0,  0.0, 
  -1.0, -1.0, -3.0, -3.0,  0.0, -4.0, -3.0,  4.0, -3.0,  2.0,  1.0, -3.0, -3.0, -3.0, -3.0, -2.0, -2.0,  1.0, -3.0, -1.0,  0.0, 
  -1.0, -3.0, -1.0,  1.0, -3.0, -2.0, -1.0, -3.0,  5.0, -2.0, -1.0,  0.0, -1.0,  1.0,  2.0,  0.0,  0.0, -3.0, -3.0, -2.0,  0.0, 
  -1.0, -1.0, -4.0, -3.0,  0.0, -4.0, -3.0,  2.0, -2.0,  4.0,  2.0, -3.0, -3.0, -2.0, -2.0, -2.0, -2.0,  3.0, -2.0, -1.0,  0.0, 
  -1.0, -1.0, -3.0, -2.0,  0.0, -3.0, -2.0,  1.0, -1.0,  2.0,  5.0, -2.0, -2.0,  0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0,  0.0, 
  -2.0, -3.0,  1.0,  0.0, -3.0,  0.0, -1.0, -3.0,  0.0, -3.0, -2.0,  6.0, -2.0,  0.0,  0.0,  1.0,  0.0, -3.0, -4.0, -2.0,  0.0, 
  -1.0, -3.0, -1.0, -1.0, -4.0, -2.0, -2.0, -3.0, -1.0, -3.0, -2.0, -1.0,  7.0, -1.0, -2.0, -1.0,  1.0, -2.0, -4.0, -3.0,  0.0, 
  -1.0, -3.0,  0.0,  2.0, -3.0, -2.0,  0.0, -3.0,  1.0, -2.0,  0.0,  0.0, -1.0,  5.0,  1.0,  0.0,  0.0, -2.0, -2.0, -1.0,  0.0, 
  -1.0, -3.0, -2.0,  0.0, -3.0, -2.0,  0.0, -3.0,  2.0, -2.0, -1.0,  0.0, -2.0,  1.0,  5.0, -1.0, -1.0, -3.0, -3.0, -2.0,  0.0, 
   1.0, -1.0,  0.0,  0.0, -2.0,  0.0, -1.0, -2.0,  0.0, -2.0, -1.0,  1.0, -1.0,  0.0, -1.0,  4.0,  1.0, -2.0, -3.0, -2.0,  0.0, 
  -1.0, -1.0,  1.0,  0.0, -2.0,  1.0,  0.0, -2.0,  0.0, -2.0, -1.0,  0.0,  1.0,  0.0, -1.0,  1.0,  4.0, -2.0, -3.0, -2.0,  0.0, 
   0.0, -1.0, -3.0, -2.0, -1.0, -3.0, -3.0,  3.0, -2.0,  1.0,  1.0, -3.0, -2.0, -2.0, -3.0, -2.0, -2.0,  4.0, -3.0, -1.0,  0.0, 
  -3.0, -2.0, -4.0, -3.0,  1.0, -2.0, -2.0, -3.0, -3.0, -2.0, -1.0, -4.0, -4.0, -2.0, -3.0, -3.0, -3.0, -3.0, 11.0,  2.0,  0.0, 
  -2.0, -2.0, -3.0, -2.0,  3.0, -3.0,  2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -3.0, -1.0, -2.0, -2.0, -2.0, -1.0,  2.0,  7.0,  0.0, 
   0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0
};

static int MBB_AMINO_INDEX[26]=
  {0,-1, 1, 2, 3, 4, 5, 6, 7,-1, 8, 9,10,11,-1,12,13,14,15,16,-1,17,18,20,19,-1};
// A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z //

static char MBB_CODON_TABLE[64]=
  {'K', 'N', 'K', 'N', // AA-
   'T', 'T', 'T', 'T', // AC-
   'R', 'S', 'R', 'S', // AG-
   'I', 'I', 'M', 'I', // AT-
   'Q', 'H', 'Q', 'H', // CA-
   'P', 'P', 'P', 'P', // CC-
   'R', 'R', 'R', 'R', // CG-
   'L', 'L', 'L', 'L', // CT-
   'E', 'D', 'E', 'D', // GA-
   'A', 'A', 'A', 'A', // GC-
   'G', 'G', 'G', 'G', // GG-
   'V', 'V', 'V', 'V', // GT-
   '*', 'Y', '*', 'Y', // TA-
   'S', 'S', 'S', 'S', // TC-
   '*', 'C', 'W', 'C', // TG-
   'L', 'F', 'L', 'F'};// TT-

int MBB_MinInt(int a,  int b);
int MBB_MaxInt(int a,  int b);
float MBB_MinFloat(float a,  float b);
float MBB_MaxFloat(float a,  float b);

void MBB_SortInts(int * Vals, int * Index, int num_vals);
void MBB_SortFloats(float * Vals, int * Index, int num_vals);

int MBB_DNAtoNum(char residue);
int MBB_AminoToIndex(char residue);
char MBB_TranslateCodon(char * Codon);
float MBB_AminoAliScore(char amino1, char amino2);

#endif
